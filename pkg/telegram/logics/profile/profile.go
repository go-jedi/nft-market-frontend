package profile

import (
	"fmt"
	"os"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
	"github.com/rob-bender/nft-market-frontend/pkg/telegram/keyboard"
	requestProject "github.com/rob-bender/nft-market-frontend/pkg/telegram/request"
)

func Profile(bot *tgbotapi.BotAPI, msg tgbotapi.MessageConfig, teleId int64, userName string, languageUser string) error {
	resGetUserProfile, err := requestProject.GetUserProfile(teleId)
	if err != nil {
		return err
	}
	fmt.Println("resGetUserProfile -->", resGetUserProfile)
	if len(resGetUserProfile) > 0 {
		var isTesting string = os.Getenv("IS_TESTING")
		var needPath string = ""
		if isTesting == "true" {
			needPath = "/home/dale/job/work/my-project/nft-market/frontend/img"
		} else {
			needPath = "/home/nft-market-bot/frontend/nft-market-frontend/img"
		}
		photo := tgbotapi.NewPhoto(teleId, tgbotapi.FilePath(fmt.Sprintf("%s%s", needPath, "/img-need/4.jpg")))
		photo.ParseMode = "Markdown"
		if err != nil {
			return err
		}
		if languageUser == "ru" {
			var isVerification string
			var isPremium string
			if resGetUserProfile[0].Verification {
				isVerification = "‚úÖ *–í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω*"
			} else {
				isVerification = "‚ö†Ô∏è *–ù–µ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω*"
			}
			if resGetUserProfile[0].IsPremium {
				isPremium = "‚úÖ *–ü—Ä–µ–º–∏—É–º*"
			} else {
				isPremium = "‚≠ïÔ∏è *–ù–µ –ø—Ä–µ–º–∏—É–º*"
			}
			photo.Caption = fmt.Sprintf("*–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç*\n\n–ë–∞–ª–∞–Ω—Å: *%d $*\n–ù–∞ –≤—ã–≤–æ–¥–µ: *%d $*\n\n–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è: %s\n–°—Ç–∞—Ç—É—Å –∞–∫–∫–∞—É–Ω—Ç–∞: %s\n–í–∞—à ID: [%d](tg://user?id=%d)",
				resGetUserProfile[0].Balance,
				resGetUserProfile[0].Conclusion,
				isVerification,
				isPremium,
				teleId,
				teleId,
			)
			photo.ReplyMarkup = keyboard.GenKeyboardInlineForProfileMenu("üì• –ü–æ–ø–æ–ª–Ω–∏—Ç—å", "üì§ –í—ã–≤–µ—Å—Ç–∏", "üñº –ú–æ–∏ NFT", "üìù –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è", "üá∫üá∏ English language", "en")
		}

		if languageUser == "en" {
			var isVerification string
			var isPremium string
			if resGetUserProfile[0].Verification {
				isVerification = "‚úÖ *Verified*"
			} else {
				isVerification = "‚ö†Ô∏è *Not verified*"
			}
			if resGetUserProfile[0].IsPremium {
				isPremium = "‚úÖ *Premium*"
			} else {
				isPremium = "‚≠ïÔ∏è *Not premium*"
			}
			photo.Caption = fmt.Sprintf("*Personal account*\n\nBalance: *%d $*\nWithdrawal: *%d $*\n\nVerification: %s\nStatus Account: %s\nYour ID: [%d](tg://user?id=%d)",
				resGetUserProfile[0].Balance,
				resGetUserProfile[0].Conclusion,
				isVerification,
				isPremium,
				teleId,
				teleId,
			)
			photo.ReplyMarkup = keyboard.GenKeyboardInlineForProfileMenu("üì• Deposit", "üì§ Withdraw", "üñº My NFTs", "üìù Verification", "üá∑üá∫ –†—É—Å—Å–∫–∏–π —è–∑—ã–∫", "ru")
		}

		_, err = bot.Send(photo)
		if err != nil {
			return err
		}
	}

	return nil
}
