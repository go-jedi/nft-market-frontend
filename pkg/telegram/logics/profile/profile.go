package profile

import (
	"fmt"
	"strings"
	"time"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
	"github.com/rob-bender/nft-market-frontend/pkg/telegram/keyboard"
	requestProject "github.com/rob-bender/nft-market-frontend/pkg/telegram/request"
)

func modifyDate(needTime time.Time) (string, error) {
	var needDateFormat string = ""
	needTimeSplit := strings.Split(needTime.String(), " ")
	needTimeDateSplit := strings.Split(needTimeSplit[0], "-")
	needTimeTimeSplit := strings.Split(needTimeSplit[1], ".")
	needDateFormat = fmt.Sprintf("%s.%s.%s %s", needTimeDateSplit[2], needTimeDateSplit[1], needTimeDateSplit[0], needTimeTimeSplit[0])
	return needDateFormat, nil
}

func Profile(bot *tgbotapi.BotAPI, msg tgbotapi.MessageConfig, teleId int64, userName string, languageUser string) error {
	resGetUserProfile, err := requestProject.GetUserProfile(teleId)
	if err != nil {
		return err
	}
	fmt.Println("resGetUserProfile -->", resGetUserProfile)
	if len(resGetUserProfile) > 0 {
		photo := tgbotapi.NewPhoto(teleId, tgbotapi.FilePath("/home/dale/job/work/my-project/nft-market/frontend/img/img-profile.jpg"))
		photo.ParseMode = "Markdown"
		loc, err := time.LoadLocation("Europe/Moscow")
		now := time.Now().In(loc)
		if err != nil {
			return err
		}
		resModifyDate, err := modifyDate(now)
		if err != nil {
			return err
		}
		if languageUser == "ru" {
			var isVerification string
			if resGetUserProfile[0].Verification {
				isVerification = "‚úÖ *–í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω*"
			} else {
				isVerification = "‚ö†Ô∏è *–ù–µ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω*"
			}
			photo.Caption = fmt.Sprintf("*–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç*\n\n–ë–∞–ª–∞–Ω—Å: *%d $*\n–ù–∞ –≤—ã–≤–æ–¥–µ: *%d $*\n\n–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è: %s\n–í–∞—à ID: [%d](tg://user?id=%d)\n\n–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è: %s",
				resGetUserProfile[0].Balance,
				resGetUserProfile[0].Conclusion,
				isVerification,
				teleId,
				teleId,
				resModifyDate,
			)
			photo.ReplyMarkup = keyboard.GenKeyboardInlineForProfileMenu("üì• –ü–æ–ø–æ–ª–Ω–∏—Ç—å", "üì§ –í—ã–≤–µ—Å—Ç–∏", "üñº –ú–æ–∏ NFT", "üìù –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è", "üá∫üá∏ English language", "en")
		}

		if languageUser == "en" {
			var isVerification string
			if resGetUserProfile[0].Verification {
				isVerification = "‚úÖ *Verified*"
			} else {
				isVerification = "‚ö†Ô∏è *Not verified*"
			}
			photo.Caption = fmt.Sprintf("*Personal account*\n\nBalance: *%d $*\nWithdrawal: *%d $*\n\nVerification: %s\nYour ID: [%d](tg://user?id=%d)\n\nDate and time: %s",
				resGetUserProfile[0].Balance,
				resGetUserProfile[0].Conclusion,
				isVerification,
				teleId,
				teleId,
				resModifyDate,
			)
			photo.ReplyMarkup = keyboard.GenKeyboardInlineForProfileMenu("üì• Deposit", "üì§ Withdraw", "üñº My NFTs", "üìù Verification", "üá∑üá∫ –†—É—Å—Å–∫–∏–π —è–∑—ã–∫", "ru")
		}

		_, err = bot.Send(photo)
		if err != nil {
			return err
		}
	}

	return nil
}
